GDAL_ROOT = .
 
!INCLUDE nmake.opt

!IF !DEFINED(PROJ_INCLUDE)
!ERROR PROJ_INCLUDE should be defined. PROJ >= 6 is a required dependency
!ENDIF

##############################################################################
# The following determines whether we are linking all the OGR formats 
# into the DLL, or only the minimum spatial reference related stuff required
# for a raster-gdal build.

#OGR_BASE_INCLUDE = /INCLUDE:_OCTNewCoordinateTransformation@8 \
#		/INCLUDE:_OSRValidate@4 \
#		/INCLUDE:_OGR_G_GetPointCount@4

OGR_BASE_INCLUDE = /INCLUDE:$(SYM_PREFIX)OSRValidate \
		/INCLUDE:$(SYM_PREFIX)OGR_G_GetPointCount 


OGR_OBJ = ogr\ogrsf_frmts\ogrsf_frmts.lib ogr\ogr.lib
OGR_INCLUDE = $(OGR_BASE_INCLUDE) \
		/INCLUDE:$(SYM_PREFIX)OGRRegisterAll

!IFDEF INCLUDE_GNM_FRMTS        
CPPFLAGS = $(CPPFLAGS) -DGNM_ENABLED        
!ENDIF

!IF DEFINED(STDCALL) && !DEFINED(WIN64)

BASE_INCLUDE =	/INCLUDE:_GDALSimpleImageWarp@36 \
		/INCLUDE:_GDALReprojectImage@48 \
		/INCLUDE:_GDALComputeMedianCutPCT@32 \
		/INCLUDE:_GDALDitherRGB2PCT@28 \
		/INCLUDE:_OCTNewCoordinateTransformation@8
!ELSE
BASE_INCLUDE =	/INCLUDE:$(SYM_PREFIX)GDALSimpleImageWarp \
		/INCLUDE:$(SYM_PREFIX)GDALReprojectImage \
		/INCLUDE:$(SYM_PREFIX)GDALComputeMedianCutPCT \
		/INCLUDE:$(SYM_PREFIX)GDALDitherRGB2PCT \
		/INCLUDE:$(SYM_PREFIX)OCTNewCoordinateTransformation
!ENDIF

APPS_OBJ = apps\commonutils.obj apps\gdalinfo_lib.obj apps\gdal_translate_lib.obj apps\gdalwarp_lib.obj apps\ogr2ogr_lib.obj \
	 apps\gdaldem_lib.obj apps\nearblack_lib.obj apps\gdal_grid_lib.obj apps\gdal_rasterize_lib.obj apps\gdalbuildvrt_lib.obj \
	 apps\gdalmdiminfo_lib.obj apps\gdalmdimtranslate_lib.obj

LIBOBJ = port\*.obj gcore\*.obj alg\*.obj frmts\o\*.obj $(OGR_OBJ) gnm\*.obj gnm\gnm_frmts\o\*.obj third_party\o\*.obj $(APPS_OBJ)

LIB_DEPENDS = port_dir core_dir ogr_dir gnm_dir third_party_dir frmts_dir appslib-target

DISTDIR	=	gdal_$(VERSION)

!IF "$(DLLBUILD)" == "1"
TARGET_LIB = dll
PLUGIN_TARGET = plugin_dir
!ELSE
TARGET_LIB = staticlib
!ENDIF

DEFAULT_TARGETS = 

default:	$(TARGET_LIB) staticlib $(PLUGIN_TARGET) apps_dir

# Batch commands to clean main build output are stored in a macro so they can be reused by different
# targets in an inline temporary batch file.
#
# We want them to run before creating a DLL or static LIB file, but if they were in a target then
# that target would have to be a dependency of dll or staticlib and would always have to run, making
# the dependent targets "out-of-date".
#
# We don't want to re-link the whole DLL just because we tried to delete a static LIB that didn't
# exist. We also don't want to install a stale DLL in a static build, so we'll remove main build
# output before creating main build output, but not as a target dependency.
CLEAN_MAIN_BUILD_OUTPUT_CMDS = \
@SETLOCAL EnableExtensions^
if exist $(GDAL_LIB_NAME) del $(GDAL_LIB_NAME)^
if exist $(GDAL_DLL) del $(GDAL_DLL)^
if exist $(GDAL_DLL).manifest del $(GDAL_DLL).manifest^
if exist *.ilk del *.ilk

staticlib:	$(LIB_DEPENDS)
	if exist gdal.lib del gdal.lib
	lib /nologo /out:gdal.lib $(LIBOBJ) $(EXTERNAL_LIBS)

appslib-target:
	cd apps
	$(MAKE) /f makefile.vc appslib
	cd ..

target-lib: port_dir ogr_dir gnm_dir core_dir frmts_dir appslib-target dll 

clean:	
	cd port
	$(MAKE) /f makefile.vc clean
	cd ..
	cd gcore
	$(MAKE) /f makefile.vc clean
	cd ..
	cd alg
	$(MAKE) /f makefile.vc clean
	cd ..
	cd frmts
	$(MAKE) /f makefile.vc clean
	cd ..
	cd ogr
	$(MAKE) /f makefile.vc allclean
	cd ..
	cd third_party
	$(MAKE) /f makefile.vc clean
	cd ..
	cd gnm
	$(MAKE) /f makefile.vc allclean
	cd ..
	cd apps
	$(MAKE) /f makefile.vc clean
	cd ..
	cd swig
	$(MAKE) /f makefile.vc clean
	cd ..
	cd frmts
	$(MAKE) /f makefile.vc clean
	cd ..
	cd ogr\ogrsf_frmts
	$(MAKE) /f makefile.vc clean
	cd ..\..
	if exist gdal.lib del gdal.lib
	if exist $(GDAL_DLL) del $(GDAL_DLL)
	if exist $(GDAL_DLL).manifest del $(GDAL_DLL).manifest
	if exist gdal_i.lib del gdal_i.*
	-del *.ilk
	-del *.pdb


generate_gdal_version_h:
	cd gcore
	$(MAKE) /f makefile.vc gdal_version.h
	cd ..

port_dir:
	cd port
	$(MAKE) /f makefile.vc
	cd ..

ogr_min:
	cd ogr
	$(MAKE) /f makefile.vc ogr.lib
	cd ..

core_dir: port_dir generate_gdal_version_h
	cd gcore
	$(MAKE) /f makefile.vc
	cd ..\alg
	$(MAKE) /f makefile.vc
	cd ..

frmts_dir: generate_gdal_version_h
	cd frmts
	$(MAKE) /f makefile.vc
	cd ..

plugin_dir: dll
	cd frmts
	$(MAKE) /f makefile.vc plugindirs
	cd ..
!IFDEF INCLUDE_OGR_FRMTS
	cd ogr\ogrsf_frmts
	$(MAKE) /f makefile.vc plugindirs
	cd ..\..
!ENDIF

apps_dir:   $(TARGET_LIB)
	cd apps
	$(MAKE) /f makefile.vc
	cd ..

ogr_dir:      port_dir generate_gdal_version_h
	cd frmts/iso8211
	$(MAKE) /f makefile.vc
	cd ..\sdts
	$(MAKE) /f makefile.vc
	cd ..\..\ogr
	$(MAKE) /f makefile.vc ogr.lib frmts
	cd ..

gnm_dir:      ogr_dir
	cd gnm
	$(MAKE) /f makefile.vc gnm.lib frmts
	cd ..

third_party_dir:      port_dir
	cd third_party
	$(MAKE) /f makefile.vc
	cd ..

lib_dist:	default
	rm -rf $(DISTDIR)
	mkdir $(DISTDIR)
	cp gdal.lib port\*.h gcore\*.h ogr\*.h $(DISTDIR)
	zip -r $(DISTDIR).zip $(DISTDIR)

$(GDAL_DLL): $(LIB_DEPENDS)
	link /nologo /dll $(OGR_INCLUDE) $(BASE_INCLUDE) $(LIBOBJ) \
		$(EXTERNAL_LIBS) gcore\Version.res \
		 /out:$(GDAL_DLL) /implib:gdal_i.lib $(LINKER_FLAGS)
	if exist $(GDAL_DLL).manifest mt -manifest $(GDAL_DLL).manifest -outputresource:$(GDAL_DLL);2

dll:	$(GDAL_DLL)

# build using cygwin
docs:
!IFDEF HTMLDIR
	make PYTHONHOME= -C doc html
!ENDIF

bindings:
	-for %d in ( $(BINDINGS) ) do \
		cd swig \
		&& $(MAKE) /f makefile.vc %d  \
		&& cd .. \
		|| exit 1

bindings_install:
	-for %d in ( $(BINDINGS) ) do    \
		cd swig  \
		&& $(MAKE) /f  makefile.vc %d_install \
		&& cd ..   \
		|| exit 1

bindings_clean:
	cd swig  \
		&& $(MAKE) /f  makefile.vc  clean \
		&& cd ..   \
		|| exit 1
install: default
	-mkdir $(BINDIR)
	-mkdir $(DATADIR)
	if exist $(GDAL_DLL) $(INSTALL) $(GDAL_DLL) $(BINDIR)
	cd frmts
	$(MAKE) /f makefile.vc plugins-install
	cd ..\apps
	$(MAKE) /f makefile.vc install
	cd ..
	$(INSTALL) data\*.* $(DATADIR)
	$(INSTALL) LICENSE.TXT $(DATADIR)
!IFDEF INCLUDE_OGR_FRMTS
	cd ogr
	$(MAKE) /f makefile.vc install
	cd ..
	cd ogr\ogrsf_frmts
	$(MAKE) /f makefile.vc plugins-install
	cd ..\..
!ENDIF

!IFDEF INCLUDE_GNM_FRMTS
    cd gnm
    $(MAKE) /f makefile.vc install
    cd ..
!ENDIF

	cd apps
	$(MAKE) /f makefile.vc install
	cd ..
	$(INSTALL) data\*.* $(DATADIR)
	$(INSTALL) LICENSE.TXT $(DATADIR)
!IFDEF DEBUG
	if exist $(DEBUGDIR)\\gdal.lib del $(DEBUGDIR)\\gdal.lib
	move gdal.lib $(DEBUGDIR)\\gdal.lib
	if exist $(DEBUGDIR)\\gdal_i.exp del $(DEBUGDIR)\\gdal_i.exp
	move gdal_i.exp $(DEBUGDIR)\\gdal_i.exp
	if exist $(DEBUGDIR)\\gdal_i.lib del $(DEBUGDIR)\\gdal_i.lib
	move gdal_i.lib $(DEBUGDIR)\\gdal_i.lib
	if exist $(DEBUGDIR)\\$(GDAL_DLL) del $(DEBUGDIR)\\$(GDAL_DLL)
	move $(GDAL_DLL) $(DEBUGDIR)\\$(GDAL_DLL)
	if exist $(DEBUGDIR)\\$(GDAL_ILK) del $(DEBUGDIR)\\$(GDAL_ILK)
	move $(GDAL_ILK) $(DEBUGDIR)\\$(GDAL_ILK)
	if exist $(DEBUGDIR)\\$(GDAL_PDB) del $(DEBUGDIR)\\$(GDAL_PDB)
	move $(GDAL_PDB) $(DEBUGDIR)\\$(GDAL_PDB)
	if exist $(DEBUGDIR)\\ogr2ogr.exe del $(DEBUGDIR)\\ogr2ogr.exe
	copy apps\\ogr2ogr.exe $(DEBUGDIR)\\ogr2ogr.exe
	if exist $(DEBUGDIR)\\gdalinfo.exe del $(DEBUGDIR)\\gdalinfo.exe
	copy apps\\gdalinfo.exe $(DEBUGDIR)\\gdalinfo.exe
	if exist $(DEBUGDIR)\\gdalwarp.exe del $(DEBUGDIR)\\gdalwarp.exe
	copy apps\\gdalwarp.exe $(DEBUGDIR)\\gdalwarp.exe
	if exist $(DEBUGDIR)\\ogrinfo.exe del $(DEBUGDIR)\\ogrinfo.exe
	copy apps\\ogrinfo.exe $(DEBUGDIR)\\ogrinfo.exe
!ELSE
	if exist $(RELEASEDIR)\\gdal.lib del $(RELEASEDIR)\\gdal.lib
	move gdal.lib $(RELEASEDIR)\\gdal.lib
	if exist $(RELEASEDIR)\\gdal_i.exp del $(RELEASEDIR)\\gdal_i.exp
	move gdal_i.exp $(RELEASEDIR)\\gdal_i.exp
	if exist $(RELEASEDIR)\\gdal_i.lib del $(RELEASEDIR)\\gdal_i.lib
	move gdal_i.lib $(RELEASEDIR)\\gdal_i.lib
	if exist $(RELEASEDIR)\\$(GDAL_DLL) del $(RELEASEDIR)\\$(GDAL_DLL)
	move $(GDAL_DLL) $(RELEASEDIR)\\$(GDAL_DLL)
	if exist $(RELEASEDIR)\\ogr2ogr.exe del $(RELEASEDIR)\\ogr2ogr.exe
	copy apps\\ogr2ogr.exe $(RELEASEDIR)\\ogr2ogr.exe
!ENDIF
!IF $(SWIGJAVA) == 1
	cd swig
	$(MAKE) /f makefile.vc java
	cd ..
!ENDIF
!IFDEF DEBUG
	if exist $(DEBUGDIR)\\gdaljni.lib del $(DEBUGDIR)\\gdaljni.lib
	if exist "swig\\java\\gdaljni.lib" move swig\\java\\gdaljni.lib $(DEBUGDIR)\\gdaljni.lib
	if exist $(DEBUGDIR)\\gdaljni.exp del $(DEBUGDIR)\\gdaljni.exp
	if exist "swig\\java\\gdaljni.exp" move swig\\java\\gdaljni.exp $(DEBUGDIR)\\gdaljni.exp
	if exist $(DEBUGDIR)\\gdaljni.dll del $(DEBUGDIR)\\gdaljni.dll
	if exist "swig\\java\\gdaljni.dll" move swig\\java\\gdaljni.dll $(DEBUGDIR)\\gdaljni.dll
	if exist $(DEBUGDIR)\\gdalconstjni.lib del $(DEBUGDIR)\\gdalconstjni.lib
	if exist "swig\\java\\gdalconstjni.lib" move swig\\java\\gdalconstjni.lib $(DEBUGDIR)\\gdalconstjni.lib
	if exist $(DEBUGDIR)\\gdalconstjni.exp del $(DEBUGDIR)\\gdalconstjni.exp
	if exist "swig\\java\\gdalconstjni.exp" move swig\\java\\gdalconstjni.exp $(DEBUGDIR)\\gdalconstjni.exp
	if exist $(DEBUGDIR)\\gdalconstjni.dll del $(DEBUGDIR)\\gdalconstjni.dll
	if exist "swig\\java\\gdalconstjni.dll" move swig\\java\\gdalconstjni.dll $(DEBUGDIR)\\gdalconstjni.dll
	if exist $(DEBUGDIR)\\osrjni.lib del $(DEBUGDIR)\\osrjni.lib
	if exist "swig\\java\\osrjni.lib" move swig\\java\\osrjni.lib $(DEBUGDIR)\\osrjni.lib
	if exist $(DEBUGDIR)\\osrjni.exp del $(DEBUGDIR)\\osrjni.exp
	if exist "swig\\java\\osrjni.exp" move swig\\java\\osrjni.exp $(DEBUGDIR)\\osrjni.exp
	if exist $(DEBUGDIR)\\osrjni.dll del $(DEBUGDIR)\\osrjni.dll
	if exist "swig\\java\\osrjni.dll" move swig\\java\\osrjni.dll $(DEBUGDIR)\\osrjni.dll
	if exist $(DEBUGDIR)\\ogrjni.lib del $(DEBUGDIR)\\ogrjni.lib
	if exist "swig\\java\\ogrjni.lib" move swig\\java\\ogrjni.lib $(DEBUGDIR)\\ogrjni.lib
	if exist $(DEBUGDIR)\\ogrjni.exp del $(DEBUGDIR)\\ogrjni.exp
	if exist "swig\\java\\ogrjni.exp" move swig\\java\\ogrjni.exp $(DEBUGDIR)\\ogrjni.exp
	if exist $(DEBUGDIR)\\ogrjni.dll del $(DEBUGDIR)\\ogrjni.dll
	if exist "swig\\java\\ogrjni.dll" move swig\\java\\ogrjni.dll $(DEBUGDIR)\\ogrjni.dll
!ELSE
	if exist $(RELEASEDIR)\\gdaljni.lib del $(RELEASEDIR)\\gdaljni.lib
	if exist "swig\\java\\gdaljni.lib" move swig\\java\\gdaljni.lib $(RELEASEDIR)\\gdaljni.lib
	if exist $(RELEASEDIR)\\gdaljni.exp del $(RELEASEDIR)\\gdaljni.exp
	if exist "swig\\java\\gdaljni.exp" move swig\\java\\gdaljni.exp $(RELEASEDIR)\\gdaljni.exp
	if exist $(RELEASEDIR)\\gdaljni.dll del $(RELEASEDIR)\\gdaljni.dll
	if exist "swig\\java\\gdaljni.dll" move swig\\java\\gdaljni.dll $(RELEASEDIR)\\gdaljni.dll
	if exist $(BINDIR)\\gdaljni.dll del $(BINDIR)\\gdaljni.dll
	if exist $(RELEASEDIR)\\gdaljni.dll copy $(RELEASEDIR)\\gdaljni.dll $(BINDIR)\\gdaljni.dll
	if exist $(RELEASEDIR)\\gdalconstjni.lib del $(RELEASEDIR)\\gdalconstjni.lib
	if exist "swig\\java\\gdalconstjni.lib" move swig\\java\\gdalconstjni.lib $(RELEASEDIR)\\gdalconstjni.lib
	if exist $(RELEASEDIR)\\gdalconstjni.exp del $(RELEASEDIR)\\gdalconstjni.exp
	if exist "swig\\java\\gdalconstjni.exp" move swig\\java\\gdalconstjni.exp $(RELEASEDIR)\\gdalconstjni.exp
	if exist $(RELEASEDIR)\\gdalconstjni.dll del $(RELEASEDIR)\\gdalconstjni.dll
	if exist "swig\\java\\gdalconstjni.dll" move swig\\java\\gdalconstjni.dll $(RELEASEDIR)\\gdalconstjni.dll
	if exist $(BINDIR)\\gdalconstjni.dll del $(BINDIR)\\gdalconstjni.dll
	if exist $(RELEASEDIR)\\gdalconstjni.dll copy $(RELEASEDIR)\\gdalconstjni.dll $(BINDIR)\\gdalconstjni.dll
	if exist $(RELEASEDIR)\\osrjni.lib del $(RELEASEDIR)\\osrjni.lib
	if exist "swig\\java\\osrjni.lib" move swig\\java\\osrjni.lib $(RELEASEDIR)\\osrjni.lib
	if exist $(RELEASEDIR)\\osrjni.exp del $(RELEASEDIR)\\osrjni.exp
	if exist "swig\\java\\osrjni.exp" move swig\\java\\osrjni.exp $(RELEASEDIR)\\osrjni.exp
	if exist $(RELEASEDIR)\\osrjni.dll del $(RELEASEDIR)\\osrjni.dll
	if exist "swig\\java\\osrjni.dll" move swig\\java\\osrjni.dll $(RELEASEDIR)\\osrjni.dll
	if exist $(BINDIR)\\osrjni.dll del $(BINDIR)\\osrjni.dll
	if exist $(RELEASEDIR)\\osrjni.dll copy $(RELEASEDIR)\\osrjni.dll $(BINDIR)\\osrjni.dll
	if exist $(RELEASEDIR)\\ogrjni.lib del $(RELEASEDIR)\\ogrjni.lib
	if exist "swig\\java\\ogrjni.lib" move swig\\java\\ogrjni.lib $(RELEASEDIR)\\ogrjni.lib
	if exist $(RELEASEDIR)\\ogrjni.exp del $(RELEASEDIR)\\osgjni.exp
	if exist "swig\\java\\ogrjni.exp" move swig\\java\\ogrjni.exp $(RELEASEDIR)\\ogrjni.exp
	if exist $(RELEASEDIR)\\ogrjni.dll del $(RELEASEDIR)\\ogrjni.dll
	if exist "swig\\java\\ogrjni.dll" move swig\\java\\ogrjni.dll $(RELEASEDIR)\\ogrjni.dll
	if exist $(BINDIR)\\ogrjni.dll del $(BINDIR)\\ogrjni.dll
	if exist $(RELEASEDIR)\\ogrjni.dll copy $(RELEASEDIR)\\ogrjni.dll $(BINDIR)\\ogrjni.dll
	if exist $(BINDIR)\\java\\gdal.jar del $(BINDIR)\\java\\gdal.jar
	if exist "swig\\java\\gdal.jar" copy "swig\\java\\gdal.jar" $(BINDIR)\\java\\gdal.jar
!ENDIF

!IF $(SWIGCSHARP) == 1
	cd swig
	$(MAKE) /f makefile.vc csharp
	cd ..
!ENDIF
!IFDEF DEBUG
	if exist $(DEBUGDIR)\\gdal_wrap.lib del $(DEBUGDIR)\\gdal_wrap.lib
	if exist "swig\\csharp\\gdal_wrap.lib" move swig\\csharp\\gdal_wrap.lib $(DEBUGDIR)\\gdal_wrap.lib
	if exist $(DEBUGDIR)\\gdal_wrap.exp del $(DEBUGDIR)\\gdal_wrap.exp
	if exist "swig\\csharp\\gdal_wrap.exp" move swig\\csharp\\gdal_wrap.exp $(DEBUGDIR)\\gdal_wrap.exp
	if exist $(DEBUGDIR)\\gdal_wrap.dll del $(DEBUGDIR)\\gdal_wrap.dll
	if exist "swig\\csharp\\gdal_wrap.dll" move swig\\csharp\\gdal_wrap.dll $(DEBUGDIR)\\gdal_wrap.dll
	if exist $(DEBUGDIR)\\gdalconst_wrap.lib del $(DEBUGDIR)\\gdalconst_wrap.lib
	if exist "swig\\csharp\\gdalconst_wrap.lib" move swig\\csharp\\gdalconst_wrap.lib $(DEBUGDIR)\\gdalconst_wrap.lib
	if exist $(DEBUGDIR)\\gdalconst_wrap.exp del $(DEBUGDIR)\\gdalconst_wrap.exp
	if exist "swig\\csharp\\gdalconst_wrap.exp" move swig\\csharp\\gdalconst_wrap.exp $(DEBUGDIR)\\gdalconst_wrap.exp
	if exist $(DEBUGDIR)\\gdalconst_wrap.dll del $(DEBUGDIR)\\gdalconst_wrap.dll
	if exist "swig\\csharp\\gdalconst_wrap.dll" move swig\\csharp\\gdalconst_wrap.dll $(DEBUGDIR)\\gdalconst_wrap.dll
	if exist $(DEBUGDIR)\\ogr_wrap.lib del $(DEBUGDIR)\\ogr_wrap.lib
	if exist "swig\\csharp\\ogr_wrap.lib" move swig\\csharp\\ogr_wrap.lib $(DEBUGDIR)\\ogr_wrap.lib
	if exist $(DEBUGDIR)\\ogr_wrap.exp del $(DEBUGDIR)\\ogr_wrap.exp
	if exist "swig\\csharp\\ogr_wrap.exp" move swig\\csharp\\ogr_wrap.exp $(DEBUGDIR)\\ogr_wrap.exp
	if exist $(DEBUGDIR)\\ogr_wrap.dll del $(DEBUGDIR)\\ogr_wrap.dll
	if exist "swig\\csharp\\ogr_wrap.dll" move swig\\csharp\\ogr_wrap.dll $(DEBUGDIR)\\ogr_wrap.dll
	if exist $(DEBUGDIR)\\osr_wrap.lib del $(DEBUGDIR)\\osr_wrap.lib
	if exist "swig\\csharp\\osr_wrap.lib" move swig\\csharp\\osr_wrap.lib $(DEBUGDIR)\\osr_wrap.lib
	if exist $(DEBUGDIR)\\osr_wrap.exp del $(DEBUGDIR)\\osr_wrap.exp
	if exist "swig\\csharp\\osr_wrap.exp" move swig\\csharp\\osr_wrap.exp $(DEBUGDIR)\\osr_wrap.exp
	if exist $(DEBUGDIR)\\osr_wrap.dll del $(DEBUGDIR)\\osr_wrap.dll
	if exist "swig\\csharp\\osr_wrap.dll" move swig\\csharp\\osr_wrap.dll $(DEBUGDIR)\\osr_wrap.dll
	if exist $(DEBUGDIR)\\gdal_csharp.dll del $(DEBUGDIR)\\gdal_csharp.dll
	if exist "swig\\csharp\\gdal_csharp.dll" move swig\\csharp\\gdal_csharp.dll $(DEBUGDIR)\\gdal_csharp.dll
	if exist $(DEBUGDIR)\\gdalconst_csharp.dll del $(DEBUGDIR)\\gdalconst_csharp.dll
	if exist "swig\\csharp\\gdalconst_csharp.dll" move swig\\csharp\\gdalconst_csharp.dll $(DEBUGDIR)\\gdalconst_csharp.dll
	if exist $(DEBUGDIR)\\ogr_csharp.dll del $(DEBUGDIR)\\ogr_csharp.dll
	if exist "swig\\csharp\\ogr_csharp.dll" move swig\\csharp\\ogr_csharp.dll $(DEBUGDIR)\\ogr_csharp.dll
	if exist $(DEBUGDIR)\\osr_csharp.dll del $(DEBUGDIR)\\osr_csharp.dll
	if exist "swig\\csharp\\osr_csharp.dll" move swig\\csharp\\osr_csharp.dll $(DEBUGDIR)\\osr_csharp.dll
!ELSE
	if exist $(RELEASEDIR)\\gdal_wrap.lib del $(RELEASEDIR)\\gdal_wrap.lib
	if exist "swig\\csharp\\gdal_wrap.lib" move swig\\csharp\\gdal_wrap.lib $(RELEASEDIR)\\gdal_wrap.lib
	if exist $(RELEASEDIR)\\gdal_wrap.exp del $(RELEASEDIR)\\gdal_wrap.exp
	if exist "swig\\csharp\\gdal_wrap.exp" move swig\\csharp\\gdal_wrap.exp $(RELEASEDIR)\\gdal_wrap.exp
	if exist $(RELEASEDIR)\\gdal_wrap.dll del $(RELEASEDIR)\\gdal_wrap.dll
	if exist "swig\\csharp\\gdal_wrap.dll" move swig\\csharp\\gdal_wrap.dll $(RELEASEDIR)\\gdal_wrap.dll
	if exist $(BINDIR)\\gdal_wrap.dll del $(BINDIR)\\gdal_wrap.dll
	if exist $(RELEASEDIR)\\gdal_wrap.dll copy $(RELEASEDIR)\\gdal_wrap.dll $(BINDIR)\\gdal_wrap.dll
	if exist $(RELEASEDIR)\\gdalconst_wrap.lib del $(RELEASEDIR)\\gdalconst_wrap.lib
	if exist "swig\\csharp\\gdalconst_wrap.lib" move swig\\csharp\\gdalconst_wrap.lib $(RELEASEDIR)\\gdalconst_wrap.lib
	if exist $(RELEASEDIR)\\gdalconst_wrap.exp del $(RELEASEDIR)\\gdalconst_wrap.exp
	if exist "swig\\csharp\\gdalconst_wrap.exp" move swig\\csharp\\gdalconst_wrap.exp $(RELEASEDIR)\\gdalconst_wrap.exp
	if exist $(RELEASEDIR)\\gdalconst_wrap.dll del $(RELEASEDIR)\\gdalconst_wrap.dll
	if exist "swig\\csharp\\gdalconst_wrap.dll" move swig\\csharp\\gdalconst_wrap.dll $(RELEASEDIR)\\gdalconst_wrap.dll
	if exist $(BINDIR)\\gdalconst_wrap.dll del $(BINDIR)\\gdalconst_wrap.dll
	if exist $(RELEASEDIR)\\gdalconst_wrap.dll copy $(RELEASEDIR)\\gdalconst_wrap.dll $(BINDIR)\\gdalconst_wrap.dll
	if exist $(RELEASEDIR)\\ogr_wrap.lib del $(RELEASEDIR)\\ogr_wrap.lib
	if exist "swig\\csharp\\ogr_wrap.lib" move swig\\csharp\\ogr_wrap.lib $(RELEASEDIR)\\ogr_wrap.lib
	if exist $(RELEASEDIR)\\ogr_wrap.exp del $(RELEASEDIR)\\ogr_wrap.exp
	if exist "swig\\csharp\\ogr_wrap.exp" move swig\\csharp\\ogr_wrap.exp $(RELEASEDIR)\\ogr_wrap.exp
	if exist $(RELEASEDIR)\\ogr_wrap.dll del $(RELEASEDIR)\\ogr_wrap.dll
	if exist "swig\\csharp\\ogr_wrap.dll" move swig\\csharp\\ogr_wrap.dll $(RELEASEDIR)\\ogr_wrap.dll
	if exist $(BINDIR)\\ogr_wrap.dll del $(BINDIR)\\ogr_wrap.dll
	if exist $(RELEASEDIR)\\ogr_wrap.dll copy $(RELEASEDIR)\\ogr_wrap.dll $(BINDIR)\\ogr_wrap.dll
	if exist $(RELEASEDIR)\\osr_wrap.lib del $(RELEASEDIR)\\osr_wrap.lib
	if exist "swig\\csharp\\osr_wrap.lib" move swig\\csharp\\osr_wrap.lib $(RELEASEDIR)\\osr_wrap.lib
	if exist $(RELEASEDIR)\\osr_wrap.exp del $(RELEASEDIR)\\osr_wrap.exp
	if exist "swig\\csharp\\osr_wrap.exp" move swig\\csharp\\osr_wrap.exp $(RELEASEDIR)\\osr_wrap.exp
	if exist $(RELEASEDIR)\\osr_wrap.dll del $(RELEASEDIR)\\osr_wrap.dll
	if exist "swig\\csharp\\osr_wrap.dll" move swig\\csharp\\osr_wrap.dll $(RELEASEDIR)\\osr_wrap.dll
	if exist $(BINDIR)\\osr_wrap.dll del $(BINDIR)\\osr_wrap.dll
	if exist $(RELEASEDIR)\\osr_wrap.dll copy $(RELEASEDIR)\\osr_wrap.dll $(BINDIR)\\osr_wrap.dll
	if exist $(RELEASEDIR)\\gdal_csharp.dll del $(RELEASEDIR)\\gdal_csharp.dll
	if exist "swig\\csharp\\gdal_csharp.dll" move swig\\csharp\\gdal_csharp.dll $(RELEASEDIR)\\gdal_csharp.dll
	if exist $(BINDIR)\\gdal_csharp.dll del $(BINDIR)\\gdal_csharp.dll
	if exist $(RELEASEDIR)\\gdal_csharp.dll copy $(RELEASEDIR)\\gdal_csharp.dll $(BINDIR)\\gdal_csharp.dll
	if exist $(RELEASEDIR)\\gdalconst_csharp.dll del $(RELEASEDIR)\\gdalconst_csharp.dll
	if exist "swig\\csharp\\gdalconst_csharp.dll" move swig\\csharp\\gdalconst_csharp.dll $(RELEASEDIR)\\gdalconst_csharp.dll
	if exist $(BINDIR)\\gdalconst_csharp.dll del $(BINDIR)\\gdalconst_csharp.dll
	if exist $(RELEASEDIR)\\gdalconst_csharp.dll copy $(RELEASEDIR)\\gdalconst_csharp.dll $(BINDIR)\\gdalconst_csharp.dll
	if exist $(RELEASEDIR)\\ogr_csharp.dll del $(RELEASEDIR)\\ogr_csharp.dll
	if exist "swig\\csharp\\ogr_csharp.dll" move swig\\csharp\\ogr_csharp.dll $(RELEASEDIR)\\ogr_csharp.dll
	if exist $(BINDIR)\\ogr_csharp.dll del $(BINDIR)\\ogr_csharp.dll
	if exist $(RELEASEDIR)\\ogr_csharp.dll copy $(RELEASEDIR)\\ogr_csharp.dll $(BINDIR)\\ogr_csharp.dll
	if exist $(RELEASEDIR)\\osr_csharp.dll del $(RELEASEDIR)\\osr_csharp.dll
	if exist "swig\\csharp\\osr_csharp.dll" move swig\\csharp\\osr_csharp.dll $(RELEASEDIR)\\osr_csharp.dll
	if exist $(BINDIR)\\osr_csharp.dll del $(BINDIR)\\osr_csharp.dll
	if exist $(RELEASEDIR)\\osr_csharp.dll copy $(RELEASEDIR)\\osr_csharp.dll $(BINDIR)\\osr_csharp.dll
!ENDIF

devinstall: install
	-mkdir $(INCDIR)
	-mkdir $(LIBDIR)
	copy port\*.h $(INCDIR)
	copy gcore\*.h $(INCDIR)
	copy alg\*.h $(INCDIR)
	copy ogr\*.h $(INCDIR)
	copy frmts\mem\memdataset.h $(INCDIR)
	copy frmts\raw\rawdataset.h $(INCDIR)
	copy frmts\vrt\*.h $(INCDIR)
!IFDEF INCLUDE_OGR_FRMTS
	copy ogr\ogrsf_frmts\*.h $(INCDIR)
!ENDIF
!IFDEF INCLUDE_GNM_FRMTS
	copy gnm\*.h $(INCDIR)
!ENDIF
	copy apps\gdal_utils.h $(INCDIR)
	copy gdal_i.lib $(LIBDIR)

